<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/aquatrack/StockActivity.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/aquatrack/StockActivity.kt" />
              <option name="originalContent" value="package com.example.aquatrack&#10;&#10;import android.annotation.SuppressLint&#10;import android.app.DatePickerDialog&#10;import android.os.Bundle&#10;import android.view.View&#10;import android.widget.*&#10;import androidx.appcompat.app.AppCompatActivity&#10;import com.example.aquatrack.api.ApiService&#10;import com.example.aquatrack.api.Product&#10;import java.text.SimpleDateFormat&#10;import java.util.*&#10;import okhttp3.OkHttpClient&#10;import retrofit2.Call&#10;import retrofit2.Callback&#10;import retrofit2.Response&#10;import retrofit2.Retrofit&#10;import retrofit2.converter.gson.GsonConverterFactory&#10;&#10;class StockActivity : AppCompatActivity() {&#10;    private lateinit var apiService: ApiService&#10;    private lateinit var productSpinner: Spinner&#10;    private lateinit var stockCard: LinearLayout&#10;    private lateinit var stockText: TextView&#10;    private lateinit var dispatchCard: LinearLayout&#10;    private lateinit var dispatchText: TextView&#10;    private var products: List&lt;Product&gt; = emptyList()&#10;    private var selectedDate: String = &quot;&quot;&#10;    private var selectedStockDate: String = &quot;&quot;&#10;&#10;    @SuppressLint(&quot;SetTextI18n&quot;)&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        setContentView(R.layout.activity_stock)&#10;&#10;        val retrofit = Retrofit.Builder()&#10;            .baseUrl(&quot;http://192.168.1.7:8000/api/&quot;)&#10;            .client(OkHttpClient())&#10;            .addConverterFactory(GsonConverterFactory.create())&#10;            .build()&#10;        apiService = retrofit.create(ApiService::class.java)&#10;&#10;        productSpinner = findViewById(R.id.spinnerProduct)&#10;        stockCard = findViewById(R.id.cardStock)&#10;        stockText = findViewById(R.id.textStockTotal)&#10;        dispatchCard = findViewById(R.id.cardDispatch)&#10;        dispatchText = findViewById(R.id.textDispatchTotal)&#10;        val dispatchQuantityEditText = findViewById&lt;EditText&gt;(R.id.editTextDispatchQuantity)&#10;        val dispatchButton = findViewById&lt;Button&gt;(R.id.buttonSubmitDispatch)&#10;        val stockQuantityEditText = findViewById&lt;EditText&gt;(R.id.editTextStockQuantity)&#10;        val stockButton = findViewById&lt;Button&gt;(R.id.buttonSubmitStock)&#10;        val dateButton = findViewById&lt;Button&gt;(R.id.buttonSelectDate)&#10;        val selectedDateText = findViewById&lt;TextView&gt;(R.id.textSelectedDate)&#10;        val stockDateButton = findViewById&lt;Button&gt;(R.id.buttonSelectStockDate)&#10;        val selectedStockDateText = findViewById&lt;TextView&gt;(R.id.textSelectedStockDate)&#10;&#10;        // Hide dispatch and stock sections initially&#10;        val dispatchSection = findViewById&lt;View&gt;(R.id.buttonSelectDate).parent as View&#10;        val stockSection = findViewById&lt;View&gt;(R.id.buttonSelectStockDate).parent as View&#10;        dispatchSection.visibility = View.GONE&#10;        stockSection.visibility = View.GONE&#10;&#10;        fetchProducts()&#10;&#10;        productSpinner.onItemSelectedListener = object : AdapterView.OnItemSelectedListener {&#10;            override fun onItemSelected(parent: AdapterView&lt;*&gt;, view: View?, position: Int, id: Long) {&#10;                if (position == 0) {&#10;                    stockCard.visibility = View.GONE&#10;                    dispatchCard.visibility = View.GONE&#10;                    dispatchSection.visibility = View.GONE&#10;                    stockSection.visibility = View.GONE&#10;                } else {&#10;                    val product = products[position - 1]&#10;                    fetchStockAndDispatch(product.product_id, product.product_name)&#10;                    dispatchSection.visibility = View.VISIBLE&#10;                    stockSection.visibility = View.VISIBLE&#10;                }&#10;            }&#10;            override fun onNothingSelected(parent: AdapterView&lt;*&gt;) {&#10;                stockCard.visibility = View.GONE&#10;                dispatchCard.visibility = View.GONE&#10;                dispatchSection.visibility = View.GONE&#10;                stockSection.visibility = View.GONE&#10;            }&#10;        }&#10;&#10;        dateButton.setOnClickListener {&#10;            val calendar = Calendar.getInstance()&#10;            val datePicker = DatePickerDialog(this, { _, year, month, dayOfMonth -&gt;&#10;                val sdf = SimpleDateFormat(&quot;yyyy-MM-dd&quot;, Locale.US)&#10;                calendar.set(year, month, dayOfMonth)&#10;                selectedDate = sdf.format(calendar.time)&#10;                selectedDateText.text = &quot;Selected Date: $selectedDate&quot;&#10;            }, calendar.get(Calendar.YEAR), calendar.get(Calendar.MONTH), calendar.get(Calendar.DAY_OF_MONTH))&#10;            datePicker.datePicker.maxDate = System.currentTimeMillis()&#10;            datePicker.show()&#10;        }&#10;&#10;        stockDateButton.setOnClickListener {&#10;            val calendar = Calendar.getInstance()&#10;            val datePicker = DatePickerDialog(this, { _, year, month, dayOfMonth -&gt;&#10;                val sdf = SimpleDateFormat(&quot;yyyy-MM-dd&quot;, Locale.US)&#10;                calendar.set(year, month, dayOfMonth)&#10;                selectedStockDate = sdf.format(calendar.time)&#10;                selectedStockDateText.text = &quot;Selected Stock Date: $selectedStockDate&quot;&#10;            }, calendar.get(Calendar.YEAR), calendar.get(Calendar.MONTH), calendar.get(Calendar.DAY_OF_MONTH))&#10;            datePicker.datePicker.maxDate = System.currentTimeMillis()&#10;            datePicker.show()&#10;        }&#10;&#10;        dispatchButton.setOnClickListener {&#10;            val position = productSpinner.selectedItemPosition&#10;            if (position &lt;= 0) {&#10;                Toast.makeText(this, &quot;Please select a product.&quot;, Toast.LENGTH_SHORT).show()&#10;                return@setOnClickListener&#10;            }&#10;            val product = products[position - 1]&#10;            val quantityText = dispatchQuantityEditText.text.toString()&#10;            val quantity = quantityText.toIntOrNull()&#10;            if (quantity == null || quantity &lt;= 0) {&#10;                Toast.makeText(this, &quot;Enter a valid dispatch quantity.&quot;, Toast.LENGTH_SHORT).show()&#10;                return@setOnClickListener&#10;            }&#10;            if (selectedDate.isBlank()) {&#10;                Toast.makeText(this, &quot;Please select a date.&quot;, Toast.LENGTH_SHORT).show()&#10;                return@setOnClickListener&#10;            }&#10;            val request = com.example.aquatrack.api.CreateDispatchRequest(product.product_id, quantity, selectedDate)&#10;            apiService.createDispatch(request).enqueue(object : Callback&lt;com.example.aquatrack.api.CreateDispatchResponse&gt; {&#10;                override fun onResponse(call: Call&lt;com.example.aquatrack.api.CreateDispatchResponse&gt;, response: Response&lt;com.example.aquatrack.api.CreateDispatchResponse&gt;) {&#10;                    if (response.isSuccessful &amp;&amp; response.body() != null) {&#10;                        Toast.makeText(this@StockActivity, &quot;Dispatch created successfully!&quot;, Toast.LENGTH_LONG).show()&#10;                        dispatchQuantityEditText.text.clear()&#10;                        fetchStockAndDispatch(product.product_id, product.product_name)&#10;                    } else {&#10;                        Toast.makeText(this@StockActivity, &quot;Failed to create dispatch.&quot;, Toast.LENGTH_LONG).show()&#10;                    }&#10;                }&#10;                override fun onFailure(call: Call&lt;com.example.aquatrack.api.CreateDispatchResponse&gt;, t: Throwable) {&#10;                    Toast.makeText(this@StockActivity, &quot;Network error: ${t.localizedMessage}&quot;, Toast.LENGTH_LONG).show()&#10;                }&#10;            })&#10;        }&#10;&#10;        stockButton.setOnClickListener {&#10;            val position = productSpinner.selectedItemPosition&#10;            if (position &lt;= 0) {&#10;                Toast.makeText(this, &quot;Please select a product.&quot;, Toast.LENGTH_SHORT).show()&#10;                return@setOnClickListener&#10;            }&#10;            val product = products[position - 1]&#10;            val quantityText = stockQuantityEditText.text.toString()&#10;            val quantity = quantityText.toIntOrNull()&#10;            if (quantity == null || quantity &lt;= 0) {&#10;                Toast.makeText(this, &quot;Enter a valid stock quantity.&quot;, Toast.LENGTH_SHORT).show()&#10;                return@setOnClickListener&#10;            }&#10;            if (selectedStockDate.isBlank()) {&#10;                Toast.makeText(this, &quot;Please select a stock date.&quot;, Toast.LENGTH_SHORT).show()&#10;                return@setOnClickListener&#10;            }&#10;            val request = com.example.aquatrack.api.CreateStockRequest(product.product_id, quantity, selectedStockDate)&#10;            apiService.createStock(request).enqueue(object : Callback&lt;com.example.aquatrack.api.CreateStockResponse&gt; {&#10;                override fun onResponse(call: Call&lt;com.example.aquatrack.api.CreateStockResponse&gt;, response: Response&lt;com.example.aquatrack.api.CreateStockResponse&gt;) {&#10;                    if (response.isSuccessful &amp;&amp; response.body() != null) {&#10;                        Toast.makeText(this@StockActivity, &quot;Stock created successfully!&quot;, Toast.LENGTH_LONG).show()&#10;                        stockQuantityEditText.text.clear()&#10;                        fetchStockAndDispatch(product.product_id, product.product_name)&#10;                    } else {&#10;                        Toast.makeText(this@StockActivity, &quot;Failed to create stock.&quot;, Toast.LENGTH_LONG).show()&#10;                    }&#10;                }&#10;                override fun onFailure(call: Call&lt;com.example.aquatrack.api.CreateStockResponse&gt;, t: Throwable) {&#10;                    Toast.makeText(this@StockActivity, &quot;Network error: ${t.localizedMessage}&quot;, Toast.LENGTH_LONG).show()&#10;                }&#10;            })&#10;        }&#10;    }&#10;&#10;    private fun fetchProducts() {&#10;        apiService.getProducts().enqueue(object : Callback&lt;List&lt;Product&gt;&gt; {&#10;            override fun onResponse(call: Call&lt;List&lt;Product&gt;&gt;, response: Response&lt;List&lt;Product&gt;&gt;) {&#10;                if (response.isSuccessful &amp;&amp; response.body() != null) {&#10;                    products = response.body()!!&#10;                    val productNames = mutableListOf(&quot;Select a product...&quot;)&#10;                    productNames.addAll(products.map { &quot;${it.product_name} (${it.quantity_type})&quot; })&#10;                    val adapter = ArrayAdapter(this@StockActivity, android.R.layout.simple_spinner_item, productNames)&#10;                    adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item)&#10;                    productSpinner.adapter = adapter&#10;                    productSpinner.setSelection(0)&#10;                } else {&#10;                    Toast.makeText(this@StockActivity, &quot;Failed to load products&quot;, Toast.LENGTH_SHORT).show()&#10;                }&#10;            }&#10;            override fun onFailure(call: Call&lt;List&lt;Product&gt;&gt;, t: Throwable) {&#10;                Toast.makeText(this@StockActivity, &quot;Network error: ${t.localizedMessage}&quot;, Toast.LENGTH_SHORT).show()&#10;            }&#10;        })&#10;    }&#10;&#10;    private fun fetchStockAndDispatch(productId: Int, productName: String) {&#10;        apiService.getStockTotal(productId).enqueue(object : Callback&lt;com.example.aquatrack.api.StockTotalResponse&gt; {&#10;            override fun onResponse(call: Call&lt;com.example.aquatrack.api.StockTotalResponse&gt;, response: Response&lt;com.example.aquatrack.api.StockTotalResponse&gt;) {&#10;                if (response.isSuccessful &amp;&amp; response.body() != null) {&#10;                    val stock = response.body()!!&#10;                    stockText.text = &quot;$productName\nTotal Stock: ${stock.total_stock}&quot;&#10;                    stockCard.visibility = View.VISIBLE&#10;                } else {&#10;                    stockText.text = &quot;Failed to load stock.&quot;&#10;                    stockCard.visibility = View.VISIBLE&#10;                }&#10;            }&#10;            override fun onFailure(call: Call&lt;com.example.aquatrack.api.StockTotalResponse&gt;, t: Throwable) {&#10;                stockText.text = &quot;Network error: ${t.localizedMessage}&quot;&#10;                stockCard.visibility = View.VISIBLE&#10;            }&#10;        })&#10;        apiService.getDispatchTotal(productId).enqueue(object : Callback&lt;com.example.aquatrack.api.DispatchTotalResponse&gt; {&#10;            override fun onResponse(call: Call&lt;com.example.aquatrack.api.DispatchTotalResponse&gt;, response: Response&lt;com.example.aquatrack.api.DispatchTotalResponse&gt;) {&#10;                if (response.isSuccessful &amp;&amp; response.body() != null) {&#10;                    val dispatch = response.body()!!&#10;                    dispatchText.text = &quot;$productName\nTotal Dispatched: ${dispatch.total_dispatched}&quot;&#10;                    dispatchCard.visibility = View.VISIBLE&#10;                } else {&#10;                    dispatchText.text = &quot;Failed to load dispatch count.&quot;&#10;                    dispatchCard.visibility = View.VISIBLE&#10;                }&#10;            }&#10;            override fun onFailure(call: Call&lt;com.example.aquatrack.api.DispatchTotalResponse&gt;, t: Throwable) {&#10;                dispatchText.text = &quot;Network error: ${t.localizedMessage}&quot;&#10;                dispatchCard.visibility = View.VISIBLE&#10;            }&#10;        })&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.aquatrack&#10;&#10;import android.annotation.SuppressLint&#10;import android.app.DatePickerDialog&#10;import android.os.Bundle&#10;import android.view.Menu&#10;import android.view.MenuItem&#10;import android.view.View&#10;import android.widget.*&#10;import androidx.appcompat.app.AppCompatActivity&#10;import androidx.appcompat.widget.Toolbar&#10;import com.example.aquatrack.api.ApiService&#10;import com.example.aquatrack.api.Product&#10;import java.text.SimpleDateFormat&#10;import java.util.*&#10;import okhttp3.OkHttpClient&#10;import retrofit2.Call&#10;import retrofit2.Callback&#10;import retrofit2.Response&#10;import retrofit2.Retrofit&#10;import retrofit2.converter.gson.GsonConverterFactory&#10;&#10;class StockActivity : AppCompatActivity() {&#10;    private lateinit var apiService: ApiService&#10;    private lateinit var productSpinner: Spinner&#10;    private lateinit var stockCard: LinearLayout&#10;    private lateinit var stockText: TextView&#10;    private lateinit var dispatchCard: LinearLayout&#10;    private lateinit var dispatchText: TextView&#10;    private var products: List&lt;Product&gt; = emptyList()&#10;    private var selectedDate: String = &quot;&quot;&#10;    private var selectedStockDate: String = &quot;&quot;&#10;&#10;    @SuppressLint(&quot;SetTextI18n&quot;)&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        setContentView(R.layout.activity_stock)&#10;&#10;        val toolbar = findViewById&lt;Toolbar&gt;(R.id.toolbarStock)&#10;        setSupportActionBar(toolbar)&#10;&#10;        val retrofit = Retrofit.Builder()&#10;            .baseUrl(&quot;http://192.168.1.7:8000/api/&quot;)&#10;            .client(OkHttpClient())&#10;            .addConverterFactory(GsonConverterFactory.create())&#10;            .build()&#10;        apiService = retrofit.create(ApiService::class.java)&#10;&#10;        productSpinner = findViewById(R.id.spinnerProduct)&#10;        stockCard = findViewById(R.id.cardStock)&#10;        stockText = findViewById(R.id.textStockTotal)&#10;        dispatchCard = findViewById(R.id.cardDispatch)&#10;        dispatchText = findViewById(R.id.textDispatchTotal)&#10;        val dispatchQuantityEditText = findViewById&lt;EditText&gt;(R.id.editTextDispatchQuantity)&#10;        val dispatchButton = findViewById&lt;Button&gt;(R.id.buttonSubmitDispatch)&#10;        val stockQuantityEditText = findViewById&lt;EditText&gt;(R.id.editTextStockQuantity)&#10;        val stockButton = findViewById&lt;Button&gt;(R.id.buttonSubmitStock)&#10;        val dateButton = findViewById&lt;Button&gt;(R.id.buttonSelectDate)&#10;        val selectedDateText = findViewById&lt;TextView&gt;(R.id.textSelectedDate)&#10;        val stockDateButton = findViewById&lt;Button&gt;(R.id.buttonSelectStockDate)&#10;        val selectedStockDateText = findViewById&lt;TextView&gt;(R.id.textSelectedStockDate)&#10;&#10;        // Hide dispatch and stock sections initially&#10;        val dispatchSection = findViewById&lt;View&gt;(R.id.buttonSelectDate).parent as View&#10;        val stockSection = findViewById&lt;View&gt;(R.id.buttonSelectStockDate).parent as View&#10;        dispatchSection.visibility = View.GONE&#10;        stockSection.visibility = View.GONE&#10;&#10;        fetchProducts()&#10;&#10;        productSpinner.onItemSelectedListener = object : AdapterView.OnItemSelectedListener {&#10;            override fun onItemSelected(parent: AdapterView&lt;*&gt;, view: View?, position: Int, id: Long) {&#10;                if (position == 0) {&#10;                    stockCard.visibility = View.GONE&#10;                    dispatchCard.visibility = View.GONE&#10;                    dispatchSection.visibility = View.GONE&#10;                    stockSection.visibility = View.GONE&#10;                } else {&#10;                    val product = products[position - 1]&#10;                    fetchStockAndDispatch(product.product_id, product.product_name)&#10;                    dispatchSection.visibility = View.VISIBLE&#10;                    stockSection.visibility = View.VISIBLE&#10;                }&#10;            }&#10;            override fun onNothingSelected(parent: AdapterView&lt;*&gt;) {&#10;                stockCard.visibility = View.GONE&#10;                dispatchCard.visibility = View.GONE&#10;                dispatchSection.visibility = View.GONE&#10;                stockSection.visibility = View.GONE&#10;            }&#10;        }&#10;&#10;        dateButton.setOnClickListener {&#10;            val calendar = Calendar.getInstance()&#10;            val datePicker = DatePickerDialog(this, { _, year, month, dayOfMonth -&gt;&#10;                val sdf = SimpleDateFormat(&quot;yyyy-MM-dd&quot;, Locale.US)&#10;                calendar.set(year, month, dayOfMonth)&#10;                selectedDate = sdf.format(calendar.time)&#10;                selectedDateText.text = &quot;Selected Date: $selectedDate&quot;&#10;            }, calendar.get(Calendar.YEAR), calendar.get(Calendar.MONTH), calendar.get(Calendar.DAY_OF_MONTH))&#10;            datePicker.datePicker.maxDate = System.currentTimeMillis()&#10;            datePicker.show()&#10;        }&#10;&#10;        stockDateButton.setOnClickListener {&#10;            val calendar = Calendar.getInstance()&#10;            val datePicker = DatePickerDialog(this, { _, year, month, dayOfMonth -&gt;&#10;                val sdf = SimpleDateFormat(&quot;yyyy-MM-dd&quot;, Locale.US)&#10;                calendar.set(year, month, dayOfMonth)&#10;                selectedStockDate = sdf.format(calendar.time)&#10;                selectedStockDateText.text = &quot;Selected Stock Date: $selectedStockDate&quot;&#10;            }, calendar.get(Calendar.YEAR), calendar.get(Calendar.MONTH), calendar.get(Calendar.DAY_OF_MONTH))&#10;            datePicker.datePicker.maxDate = System.currentTimeMillis()&#10;            datePicker.show()&#10;        }&#10;&#10;        dispatchButton.setOnClickListener {&#10;            val position = productSpinner.selectedItemPosition&#10;            if (position &lt;= 0) {&#10;                Toast.makeText(this, &quot;Please select a product.&quot;, Toast.LENGTH_SHORT).show()&#10;                return@setOnClickListener&#10;            }&#10;            val product = products[position - 1]&#10;            val quantityText = dispatchQuantityEditText.text.toString()&#10;            val quantity = quantityText.toIntOrNull()&#10;            if (quantity == null || quantity &lt;= 0) {&#10;                Toast.makeText(this, &quot;Enter a valid dispatch quantity.&quot;, Toast.LENGTH_SHORT).show()&#10;                return@setOnClickListener&#10;            }&#10;            if (selectedDate.isBlank()) {&#10;                Toast.makeText(this, &quot;Please select a date.&quot;, Toast.LENGTH_SHORT).show()&#10;                return@setOnClickListener&#10;            }&#10;            val request = com.example.aquatrack.api.CreateDispatchRequest(product.product_id, quantity, selectedDate)&#10;            apiService.createDispatch(request).enqueue(object : Callback&lt;com.example.aquatrack.api.CreateDispatchResponse&gt; {&#10;                override fun onResponse(call: Call&lt;com.example.aquatrack.api.CreateDispatchResponse&gt;, response: Response&lt;com.example.aquatrack.api.CreateDispatchResponse&gt;) {&#10;                    if (response.isSuccessful &amp;&amp; response.body() != null) {&#10;                        Toast.makeText(this@StockActivity, &quot;Dispatch created successfully!&quot;, Toast.LENGTH_LONG).show()&#10;                        dispatchQuantityEditText.text.clear()&#10;                        fetchStockAndDispatch(product.product_id, product.product_name)&#10;                    } else {&#10;                        Toast.makeText(this@StockActivity, &quot;Failed to create dispatch.&quot;, Toast.LENGTH_LONG).show()&#10;                    }&#10;                }&#10;                override fun onFailure(call: Call&lt;com.example.aquatrack.api.CreateDispatchResponse&gt;, t: Throwable) {&#10;                    Toast.makeText(this@StockActivity, &quot;Network error: ${t.localizedMessage}&quot;, Toast.LENGTH_LONG).show()&#10;                }&#10;            })&#10;        }&#10;&#10;        stockButton.setOnClickListener {&#10;            val position = productSpinner.selectedItemPosition&#10;            if (position &lt;= 0) {&#10;                Toast.makeText(this, &quot;Please select a product.&quot;, Toast.LENGTH_SHORT).show()&#10;                return@setOnClickListener&#10;            }&#10;            val product = products[position - 1]&#10;            val quantityText = stockQuantityEditText.text.toString()&#10;            val quantity = quantityText.toIntOrNull()&#10;            if (quantity == null || quantity &lt;= 0) {&#10;                Toast.makeText(this, &quot;Enter a valid stock quantity.&quot;, Toast.LENGTH_SHORT).show()&#10;                return@setOnClickListener&#10;            }&#10;            if (selectedStockDate.isBlank()) {&#10;                Toast.makeText(this, &quot;Please select a stock date.&quot;, Toast.LENGTH_SHORT).show()&#10;                return@setOnClickListener&#10;            }&#10;            val request = com.example.aquatrack.api.CreateStockRequest(product.product_id, quantity, selectedStockDate)&#10;            apiService.createStock(request).enqueue(object : Callback&lt;com.example.aquatrack.api.CreateStockResponse&gt; {&#10;                override fun onResponse(call: Call&lt;com.example.aquatrack.api.CreateStockResponse&gt;, response: Response&lt;com.example.aquatrack.api.CreateStockResponse&gt;) {&#10;                    if (response.isSuccessful &amp;&amp; response.body() != null) {&#10;                        Toast.makeText(this@StockActivity, &quot;Stock created successfully!&quot;, Toast.LENGTH_LONG).show()&#10;                        stockQuantityEditText.text.clear()&#10;                        fetchStockAndDispatch(product.product_id, product.product_name)&#10;                    } else {&#10;                        Toast.makeText(this@StockActivity, &quot;Failed to create stock.&quot;, Toast.LENGTH_LONG).show()&#10;                    }&#10;                }&#10;                override fun onFailure(call: Call&lt;com.example.aquatrack.api.CreateStockResponse&gt;, t: Throwable) {&#10;                    Toast.makeText(this@StockActivity, &quot;Network error: ${t.localizedMessage}&quot;, Toast.LENGTH_LONG).show()&#10;                }&#10;            })&#10;        }&#10;    }&#10;&#10;    override fun onCreateOptionsMenu(menu: Menu?): Boolean {&#10;        menuInflater.inflate(R.menu.menu_stock, menu)&#10;        return true&#10;    }&#10;&#10;    override fun onOptionsItemSelected(item: MenuItem): Boolean {&#10;        if (item.itemId == R.id.action_refresh) {&#10;            val position = productSpinner.selectedItemPosition&#10;            if (position &gt; 0) {&#10;                val product = products[position - 1]&#10;                fetchStockAndDispatch(product.product_id, product.product_name)&#10;            } else {&#10;                Toast.makeText(this, &quot;Please select a product to refresh.&quot;, Toast.LENGTH_SHORT).show()&#10;            }&#10;            return true&#10;        }&#10;        return super.onOptionsItemSelected(item)&#10;    }&#10;&#10;    private fun fetchProducts() {&#10;        apiService.getProducts().enqueue(object : Callback&lt;List&lt;Product&gt;&gt; {&#10;            override fun onResponse(call: Call&lt;List&lt;Product&gt;&gt;, response: Response&lt;List&lt;Product&gt;&gt;) {&#10;                if (response.isSuccessful &amp;&amp; response.body() != null) {&#10;                    products = response.body()!!&#10;                    val productNames = mutableListOf(&quot;Select a product...&quot;)&#10;                    productNames.addAll(products.map { &quot;${it.product_name} (${it.quantity_type})&quot; })&#10;                    val adapter = ArrayAdapter(this@StockActivity, android.R.layout.simple_spinner_item, productNames)&#10;                    adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item)&#10;                    productSpinner.adapter = adapter&#10;                    productSpinner.setSelection(0)&#10;                } else {&#10;                    Toast.makeText(this@StockActivity, &quot;Failed to load products&quot;, Toast.LENGTH_SHORT).show()&#10;                }&#10;            }&#10;            override fun onFailure(call: Call&lt;List&lt;Product&gt;&gt;, t: Throwable) {&#10;                Toast.makeText(this@StockActivity, &quot;Network error: ${t.localizedMessage}&quot;, Toast.LENGTH_SHORT).show()&#10;            }&#10;        })&#10;    }&#10;&#10;    private fun fetchStockAndDispatch(productId: Int, productName: String) {&#10;        apiService.getStockTotal(productId).enqueue(object : Callback&lt;com.example.aquatrack.api.StockTotalResponse&gt; {&#10;            override fun onResponse(call: Call&lt;com.example.aquatrack.api.StockTotalResponse&gt;, response: Response&lt;com.example.aquatrack.api.StockTotalResponse&gt;) {&#10;                if (response.isSuccessful &amp;&amp; response.body() != null) {&#10;                    val stock = response.body()!!&#10;                    stockText.text = &quot;$productName\nTotal Stock: ${stock.total_stock}&quot;&#10;                    stockCard.visibility = View.VISIBLE&#10;                } else {&#10;                    stockText.text = &quot;Failed to load stock.&quot;&#10;                    stockCard.visibility = View.VISIBLE&#10;                }&#10;            }&#10;            override fun onFailure(call: Call&lt;com.example.aquatrack.api.StockTotalResponse&gt;, t: Throwable) {&#10;                stockText.text = &quot;Network error: ${t.localizedMessage}&quot;&#10;                stockCard.visibility = View.VISIBLE&#10;            }&#10;        })&#10;        apiService.getDispatchTotal(productId).enqueue(object : Callback&lt;com.example.aquatrack.api.DispatchTotalResponse&gt; {&#10;            override fun onResponse(call: Call&lt;com.example.aquatrack.api.DispatchTotalResponse&gt;, response: Response&lt;com.example.aquatrack.api.DispatchTotalResponse&gt;) {&#10;                if (response.isSuccessful &amp;&amp; response.body() != null) {&#10;                    val dispatch = response.body()!!&#10;                    dispatchText.text = &quot;$productName\nTotal Dispatched: ${dispatch.total_dispatched}&quot;&#10;                    dispatchCard.visibility = View.VISIBLE&#10;                } else {&#10;                    dispatchText.text = &quot;Failed to load dispatch count.&quot;&#10;                    dispatchCard.visibility = View.VISIBLE&#10;                }&#10;            }&#10;            override fun onFailure(call: Call&lt;com.example.aquatrack.api.DispatchTotalResponse&gt;, t: Throwable) {&#10;                dispatchText.text = &quot;Network error: ${t.localizedMessage}&quot;&#10;                dispatchCard.visibility = View.VISIBLE&#10;            }&#10;        })&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/card_bg_blue.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/card_bg_blue.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;&#10;    &lt;solid android:color=&quot;@color/white&quot; /&gt;&#10;    &lt;corners android:radius=&quot;16dp&quot; /&gt;&#10;    &lt;padding android:left=&quot;8dp&quot; android:top=&quot;8dp&quot; android:right=&quot;8dp&quot; android:bottom=&quot;8dp&quot; /&gt;&#10;    &lt;stroke android:width=&quot;2dp&quot; android:color=&quot;@color/blue_primary&quot; /&gt;&#10;    &lt;size android:height=&quot;wrap_content&quot; android:width=&quot;match_parent&quot; /&gt;&#10;    &lt;shadow android:color=&quot;#22000000&quot; android:radius=&quot;8&quot; android:dx=&quot;0&quot; android:dy=&quot;2&quot; /&gt;&#10;    &lt;size android:height=&quot;wrap_content&quot; android:width=&quot;match_parent&quot; /&gt;&#10;&#10;    &lt;shadow android:color=&quot;#22000000&quot; android:radius=&quot;8&quot; android:dx=&quot;0&quot; android:dy=&quot;2&quot; /&gt;&#10;    &lt;size android:height=&quot;wrap_content&quot; android:width=&quot;match_parent&quot; /&gt;&#10;&#10;    &lt;shadow android:color=&quot;#22000000&quot; android:radius=&quot;8&quot; android:dx=&quot;0&quot; android:dy=&quot;2&quot; /&gt;&#10;    &lt;size android:height=&quot;wrap_content&quot; android:width=&quot;match_parent&quot; /&gt;&#10;&#10;    &lt;shadow android:color=&quot;#22000000&quot; android:radius=&quot;8&quot; android:dx=&quot;0&quot; android:dy=&quot;2&quot; /&gt;&#10;&lt;/shape&gt;&#10;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;&#10;    &lt;solid android:color=&quot;@color/white&quot; /&gt;&#10;    &lt;corners android:radius=&quot;16dp&quot; /&gt;&#10;    &lt;padding android:left=&quot;8dp&quot; android:top=&quot;8dp&quot; android:right=&quot;8dp&quot; android:bottom=&quot;8dp&quot; /&gt;&#10;    &lt;stroke android:width=&quot;2dp&quot; android:color=&quot;@color/blue_primary&quot; /&gt;&#10;&lt;/shape&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/edittext_bg.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/edittext_bg.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;&#10;    &lt;solid android:color=&quot;@color/white&quot;/&gt;&#10;    &lt;corners android:radius=&quot;12dp&quot;/&gt;&#10;    &lt;stroke android:width=&quot;2dp&quot; android:color=&quot;@color/blue_primary&quot;/&gt;&#10;&lt;/shape&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/spinner_bg.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/spinner_bg.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;&#10;    &lt;solid android:color=&quot;@color/white&quot;/&gt;&#10;    &lt;corners android:radius=&quot;12dp&quot;/&gt;&#10;    &lt;stroke android:width=&quot;2dp&quot; android:color=&quot;@color/blue_accent&quot;/&gt;&#10;&lt;/shape&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_production.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_production.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;ScrollView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@color/white&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:orientation=&quot;vertical&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:padding=&quot;20dp&quot;&gt;&#10;&#10;        &lt;com.google.android.material.card.MaterialCardView&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            app:cardCornerRadius=&quot;16dp&quot;&#10;            app:cardElevation=&quot;4dp&quot;&#10;            app:strokeColor=&quot;@color/blue_primary&quot;&#10;            app:strokeWidth=&quot;1dp&quot;&#10;            app:cardBackgroundColor=&quot;@color/white&quot;&gt;&#10;&#10;            &lt;LinearLayout&#10;                android:orientation=&quot;vertical&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:padding=&quot;18dp&quot;&gt;&#10;&#10;                &lt;!-- Select Order --&gt;&#10;                &lt;TextView&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Select Order&quot;&#10;                    android:textColor=&quot;@color/blue_primary&quot;&#10;                    android:textSize=&quot;18sp&quot;&#10;                    android:textStyle=&quot;bold&quot;&#10;                    android:fontFamily=&quot;sans-serif-medium&quot;&#10;                    android:paddingBottom=&quot;4dp&quot;/&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:orientation=&quot;horizontal&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:gravity=&quot;center_vertical&quot;&#10;                    android:paddingBottom=&quot;12dp&quot;&gt;&#10;&#10;                    &lt;Spinner&#10;                        android:id=&quot;@+id/spinnerOrder&quot;&#10;                        android:layout_width=&quot;0dp&quot;&#10;                        android:layout_height=&quot;48dp&quot;&#10;                        android:layout_weight=&quot;1&quot;&#10;                        android:background=&quot;@drawable/spinner_whiteborder&quot;&#10;                        android:paddingLeft=&quot;12dp&quot;&#10;                        android:paddingRight=&quot;12dp&quot;/&gt;&#10;&#10;                    &lt;ImageButton&#10;                        android:id=&quot;@+id/buttonRefreshOrders&quot;&#10;                        android:layout_width=&quot;44dp&quot;&#10;                        android:layout_height=&quot;44dp&quot;&#10;                        android:background=&quot;?attr/selectableItemBackgroundBorderless&quot;&#10;                        android:src=&quot;@drawable/ic_refresh_blue&quot;&#10;                        android:contentDescription=&quot;Refresh Orders&quot;&#10;                        app:tint=&quot;@color/blue_primary&quot;&#10;                        android:padding=&quot;8dp&quot;/&gt;&#10;                &lt;/LinearLayout&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/textOrderDetails&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Order details will appear here.&quot;&#10;                    android:textColor=&quot;@color/blue_dark&quot;&#10;                    android:textSize=&quot;16sp&quot;&#10;                    android:paddingBottom=&quot;16dp&quot;&#10;                    android:fontFamily=&quot;sans-serif&quot;/&gt;&#10;&#10;                &lt;!-- Produced Quantity --&gt;&#10;                &lt;TextView&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Produced Quantity&quot;&#10;                    android:textColor=&quot;@color/blue_primary&quot;&#10;                    android:textSize=&quot;18sp&quot;&#10;                    android:textStyle=&quot;bold&quot;&#10;                    android:fontFamily=&quot;sans-serif-medium&quot;&#10;                    android:paddingBottom=&quot;4dp&quot;/&gt;&#10;&#10;                &lt;com.google.android.material.textfield.TextInputLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:hint=&quot;Enter produced quantity&quot;&#10;                    app:boxBackgroundMode=&quot;outline&quot;&#10;                    app:boxStrokeColor=&quot;@color/blue_primary&quot;&#10;                    app:boxCornerRadiusTopStart=&quot;12dp&quot;&#10;                    app:boxCornerRadiusTopEnd=&quot;12dp&quot;&#10;                    app:boxCornerRadiusBottomStart=&quot;12dp&quot;&#10;                    app:boxCornerRadiusBottomEnd=&quot;12dp&quot;&#10;                    app:boxBackgroundColor=&quot;@color/white&quot;&#10;                    android:layout_marginBottom=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;com.google.android.material.textfield.TextInputEditText&#10;                        android:id=&quot;@+id/editTextProducedQuantity&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;48dp&quot;&#10;                        android:inputType=&quot;number&quot;&#10;                        android:textColorHint=&quot;@color/blue_grey&quot;&#10;                        android:textColor=&quot;@color/blue_dark&quot;&#10;                        android:textSize=&quot;16sp&quot;&#10;                        android:fontFamily=&quot;sans-serif&quot;/&gt;&#10;                &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;                &lt;!-- Select Date (vertical stack) --&gt;&#10;                &lt;TextView&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Select Date&quot;&#10;                    android:textColor=&quot;@color/blue_primary&quot;&#10;                    android:textSize=&quot;16sp&quot;&#10;                    android:fontFamily=&quot;sans-serif-medium&quot;&#10;                    android:paddingBottom=&quot;4dp&quot;/&gt;&#10;&#10;                &lt;com.google.android.material.button.MaterialButton&#10;                    android:id=&quot;@+id/buttonSelectDate&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;48dp&quot;&#10;                    android:text=&quot;Choose Date&quot;&#10;                    app:cornerRadius=&quot;12dp&quot;&#10;                    app:backgroundTint=&quot;@color/blue_button&quot;&#10;                    android:textColor=&quot;@color/white&quot;&#10;                    android:textSize=&quot;16sp&quot;&#10;                    app:elevation=&quot;2dp&quot;&#10;                    app:icon=&quot;@android:drawable/ic_menu_my_calendar&quot;&#10;                    app:iconGravity=&quot;textStart&quot;&#10;                    app:iconPadding=&quot;8dp&quot;&#10;                    android:layout_marginBottom=&quot;2dp&quot;/&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/textSelectedDate&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;No date selected&quot;&#10;                    android:textColor=&quot;@color/blue_primary&quot;&#10;                    android:textSize=&quot;16sp&quot;&#10;                    android:paddingLeft=&quot;2dp&quot;&#10;                    android:paddingTop=&quot;2dp&quot;&#10;                    android:paddingBottom=&quot;12dp&quot;&#10;                    android:fontFamily=&quot;sans-serif&quot;/&gt;&#10;&#10;                &lt;!-- Submit Button --&gt;&#10;                &lt;com.google.android.material.button.MaterialButton&#10;                    android:id=&quot;@+id/buttonSubmitProduction&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;54dp&quot;&#10;                    android:text=&quot;Submit Production&quot;&#10;                    app:cornerRadius=&quot;12dp&quot;&#10;                    app:backgroundTint=&quot;@color/blue_primary&quot;&#10;                    android:textColor=&quot;@color/white&quot;&#10;                    android:textStyle=&quot;bold&quot;&#10;                    android:textSize=&quot;18sp&quot;&#10;                    app:elevation=&quot;4dp&quot;&#10;                    android:layout_marginBottom=&quot;20dp&quot;&#10;                    android:fontFamily=&quot;sans-serif-medium&quot;/&gt;&#10;&#10;                &lt;!-- Production History --&gt;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/textProductionHistory&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Production History (Last 15 Days)&quot;&#10;                    android:textStyle=&quot;bold&quot;&#10;                    android:textSize=&quot;20sp&quot;&#10;                    android:textColor=&quot;@color/blue_primary&quot;&#10;                    android:paddingTop=&quot;12dp&quot;&#10;                    android:fontFamily=&quot;sans-serif-medium&quot; /&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:id=&quot;@+id/layoutProductionHistory&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:background=&quot;@android:color/transparent&quot;&#10;                    android:paddingTop=&quot;8dp&quot;/&gt;&#10;            &lt;/LinearLayout&gt;&#10;        &lt;/com.google.android.material.card.MaterialCardView&gt;&#10;    &lt;/LinearLayout&gt;&#10;&lt;/ScrollView&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;ScrollView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@color/white&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:orientation=&quot;vertical&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:padding=&quot;20dp&quot;&gt;&#10;&#10;        &lt;com.google.android.material.card.MaterialCardView&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            app:cardCornerRadius=&quot;16dp&quot;&#10;            app:cardElevation=&quot;4dp&quot;&#10;            app:strokeColor=&quot;@color/blue_primary&quot;&#10;            app:strokeWidth=&quot;1dp&quot;&#10;            app:cardBackgroundColor=&quot;@color/white&quot;&gt;&#10;&#10;            &lt;LinearLayout&#10;                android:orientation=&quot;vertical&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:padding=&quot;18dp&quot;&gt;&#10;&#10;                &lt;!-- Select Order --&gt;&#10;                &lt;TextView&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Select Order&quot;&#10;                    android:textColor=&quot;@color/blue_primary&quot;&#10;                    android:textSize=&quot;18sp&quot;&#10;                    android:textStyle=&quot;bold&quot;&#10;                    android:fontFamily=&quot;sans-serif-medium&quot;&#10;                    android:paddingBottom=&quot;4dp&quot;/&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:orientation=&quot;horizontal&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:gravity=&quot;center_vertical&quot;&#10;                    android:paddingBottom=&quot;12dp&quot;&gt;&#10;&#10;                    &lt;Spinner&#10;                        android:id=&quot;@+id/spinnerOrder&quot;&#10;                        android:layout_width=&quot;0dp&quot;&#10;                        android:layout_height=&quot;48dp&quot;&#10;                        android:layout_weight=&quot;1&quot;&#10;                        android:background=&quot;@drawable/spinner_whiteborder&quot;&#10;                        android:paddingLeft=&quot;12dp&quot;&#10;                        android:paddingRight=&quot;12dp&quot;/&gt;&#10;&#10;                    &lt;ImageButton&#10;                        android:id=&quot;@+id/buttonRefreshOrders&quot;&#10;                        android:layout_width=&quot;44dp&quot;&#10;                        android:layout_height=&quot;44dp&quot;&#10;                        android:background=&quot;?attr/selectableItemBackgroundBorderless&quot;&#10;                        android:src=&quot;@drawable/ic_refresh_blue&quot;&#10;                        android:contentDescription=&quot;Refresh Orders&quot;&#10;                        app:tint=&quot;@color/blue_primary&quot;&#10;                        android:padding=&quot;8dp&quot;/&gt;&#10;                &lt;/LinearLayout&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/textOrderDetails&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Order details will appear here.&quot;&#10;                    android:textColor=&quot;@color/blue_dark&quot;&#10;                    android:textSize=&quot;16sp&quot;&#10;                    android:paddingBottom=&quot;16dp&quot;&#10;                    android:fontFamily=&quot;sans-serif&quot;/&gt;&#10;&#10;                &lt;!-- Produced Quantity --&gt;&#10;                &lt;TextView&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Produced Quantity&quot;&#10;                    android:textColor=&quot;@color/blue_primary&quot;&#10;                    android:textSize=&quot;18sp&quot;&#10;                    android:textStyle=&quot;bold&quot;&#10;                    android:fontFamily=&quot;sans-serif-medium&quot;&#10;                    android:paddingBottom=&quot;4dp&quot;/&gt;&#10;&#10;                &lt;com.google.android.material.textfield.TextInputLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:hint=&quot;Enter produced quantity&quot;&#10;                    app:boxBackgroundMode=&quot;outline&quot;&#10;                    app:boxStrokeColor=&quot;@color/blue_primary&quot;&#10;                    app:boxCornerRadiusTopStart=&quot;12dp&quot;&#10;                    app:boxCornerRadiusTopEnd=&quot;12dp&quot;&#10;                    app:boxCornerRadiusBottomStart=&quot;12dp&quot;&#10;                    app:boxCornerRadiusBottomEnd=&quot;12dp&quot;&#10;                    app:boxBackgroundColor=&quot;@color/white&quot;&#10;                    android:layout_marginBottom=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;com.google.android.material.textfield.TextInputEditText&#10;                        android:id=&quot;@+id/editTextProducedQuantity&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:inputType=&quot;number&quot;&#10;                        android:textColorHint=&quot;@color/blue_grey&quot;&#10;                        android:textColor=&quot;@color/blue_dark&quot;&#10;                        android:textSize=&quot;16sp&quot;&#10;                        android:fontFamily=&quot;sans-serif&quot;/&gt;&#10;                &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;                &lt;!-- Select Date (vertical stack) --&gt;&#10;                &lt;TextView&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Select Date&quot;&#10;                    android:textColor=&quot;@color/blue_primary&quot;&#10;                    android:textSize=&quot;16sp&quot;&#10;                    android:fontFamily=&quot;sans-serif-medium&quot;&#10;                    android:paddingBottom=&quot;4dp&quot;/&gt;&#10;&#10;                &lt;com.google.android.material.button.MaterialButton&#10;                    android:id=&quot;@+id/buttonSelectDate&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;48dp&quot;&#10;                    android:text=&quot;Choose Date&quot;&#10;                    app:cornerRadius=&quot;12dp&quot;&#10;                    app:backgroundTint=&quot;@color/blue_button&quot;&#10;                    android:textColor=&quot;@color/white&quot;&#10;                    android:textSize=&quot;16sp&quot;&#10;                    app:elevation=&quot;2dp&quot;&#10;                    app:icon=&quot;@android:drawable/ic_menu_my_calendar&quot;&#10;                    app:iconGravity=&quot;textStart&quot;&#10;                    app:iconPadding=&quot;8dp&quot;&#10;                    android:layout_marginBottom=&quot;2dp&quot;/&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/textSelectedDate&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;No date selected&quot;&#10;                    android:textColor=&quot;@color/blue_primary&quot;&#10;                    android:textSize=&quot;16sp&quot;&#10;                    android:paddingLeft=&quot;2dp&quot;&#10;                    android:paddingTop=&quot;2dp&quot;&#10;                    android:paddingBottom=&quot;12dp&quot;&#10;                    android:fontFamily=&quot;sans-serif&quot;/&gt;&#10;&#10;                &lt;!-- Submit Button --&gt;&#10;                &lt;com.google.android.material.button.MaterialButton&#10;                    android:id=&quot;@+id/buttonSubmitProduction&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;54dp&quot;&#10;                    android:text=&quot;Submit Production&quot;&#10;                    app:cornerRadius=&quot;12dp&quot;&#10;                    app:backgroundTint=&quot;@color/blue_primary&quot;&#10;                    android:textColor=&quot;@color/white&quot;&#10;                    android:textStyle=&quot;bold&quot;&#10;                    android:textSize=&quot;18sp&quot;&#10;                    app:elevation=&quot;4dp&quot;&#10;                    android:layout_marginBottom=&quot;20dp&quot;&#10;                    android:fontFamily=&quot;sans-serif-medium&quot;/&gt;&#10;&#10;                &lt;!-- Production History --&gt;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/textProductionHistory&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Production History (Last 15 Days)&quot;&#10;                    android:textStyle=&quot;bold&quot;&#10;                    android:textSize=&quot;20sp&quot;&#10;                    android:textColor=&quot;@color/blue_primary&quot;&#10;                    android:paddingTop=&quot;12dp&quot;&#10;                    android:fontFamily=&quot;sans-serif-medium&quot; /&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:id=&quot;@+id/layoutProductionHistory&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:background=&quot;@android:color/transparent&quot;&#10;                    android:paddingTop=&quot;8dp&quot;/&gt;&#10;            &lt;/LinearLayout&gt;&#10;        &lt;/com.google.android.material.card.MaterialCardView&gt;&#10;    &lt;/LinearLayout&gt;&#10;&lt;/ScrollView&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_stock.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_stock.xml" />
              <option name="originalContent" value="                                android:textColorHint=&quot;@color/blue_grey&quot;&#10;                                android:textColor=&quot;@color/blue_dark&quot;&#10;                                android:textSize=&quot;16sp&quot;&#10;                                android:fontFamily=&quot;sans-serif&quot;/&gt;&#10;                        &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;                        &lt;com.google.android.material.button.MaterialButton&#10;                            android:id=&quot;@+id/buttonSelectStockDate&quot;&#10;                            android:layout_width=&quot;match_parent&quot;&#10;                            android:layout_height=&quot;48dp&quot;&#10;                            android:text=&quot;Choose Stock Date&quot;&#10;                            app:cornerRadius=&quot;12dp&quot;&#10;                            app:backgroundTint=&quot;@color/blue_button&quot;&#10;                            android:textColor=&quot;@color/white&quot;&#10;                            android:textSize=&quot;16sp&quot;&#10;                            app:elevation=&quot;2dp&quot;&#10;                            app:icon=&quot;@android:drawable/ic_menu_my_calendar&quot;&#10;                            app:iconGravity=&quot;textStart&quot;&#10;                            app:iconPadding=&quot;8dp&quot;&#10;                            android:layout_marginBottom=&quot;2dp&quot;/&gt;&#10;                        &lt;TextView&#10;                            android:id=&quot;@+id/textSelectedStockDate&quot;&#10;                            android:layout_width=&quot;match_parent&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;No stock date selected&quot;&#10;                            android:textColor=&quot;@color/blue_primary&quot;&#10;                            android:textSize=&quot;16sp&quot;&#10;                            android:paddingLeft=&quot;2dp&quot;&#10;                            android:paddingTop=&quot;2dp&quot;&#10;                            android:paddingBottom=&quot;12dp&quot;&#10;                            android:fontFamily=&quot;sans-serif&quot;/&gt;&#10;                        &lt;com.google.android.material.button.MaterialButton&#10;                            android:id=&quot;@+id/buttonSubmitStock&quot;&#10;                            android:layout_width=&quot;match_parent&quot;&#10;                            android:layout_height=&quot;48dp&quot;&#10;                            android:text=&quot;Submit Stock&quot;&#10;                            app:cornerRadius=&quot;12dp&quot;&#10;                            app:backgroundTint=&quot;@color/blue_primary&quot;&#10;                            android:textColor=&quot;@color/white&quot;&#10;                            android:textSize=&quot;16sp&quot;&#10;                            app:elevation=&quot;2dp&quot;&#10;                            android:layout_marginBottom=&quot;8dp&quot;/&gt;&#10;                    &lt;/LinearLayout&gt;&#10;                &lt;/LinearLayout&gt;&#10;            &lt;/com.google.android.material.card.MaterialCardView&gt;&#10;        &lt;/LinearLayout&gt;&#10;    &lt;/ScrollView&gt;&#10;&lt;/LinearLayout&gt;&#10;&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:background=&quot;@color/white&quot;&gt;&#10;&#10;    &lt;androidx.appcompat.widget.Toolbar&#10;        android:id=&quot;@+id/toolbarStock&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:background=&quot;@color/blue_primary&quot;&#10;        app:title=&quot;Aquatrack&quot;&#10;        app:titleTextColor=&quot;@color/white&quot;&#10;        app:popupTheme=&quot;@style/ThemeOverlay.AppCompat.Light&quot; /&gt;&#10;&#10;    &lt;ScrollView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&gt;&#10;        &lt;LinearLayout&#10;            android:orientation=&quot;vertical&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:padding=&quot;20dp&quot;&gt;&#10;&#10;&#10;&#10;            &lt;com.google.android.material.card.MaterialCardView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                app:cardCornerRadius=&quot;16dp&quot;&#10;                app:cardElevation=&quot;4dp&quot;&#10;                app:strokeColor=&quot;@color/blue_primary&quot;&#10;                app:strokeWidth=&quot;1dp&quot;&#10;                app:cardBackgroundColor=&quot;@color/white&quot;&#10;                android:layout_marginBottom=&quot;24dp&quot;&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:padding=&quot;18dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Select Product&quot;&#10;                        android:textColor=&quot;@color/blue_primary&quot;&#10;                        android:textSize=&quot;18sp&quot;&#10;                        android:textStyle=&quot;bold&quot;&#10;                        android:fontFamily=&quot;sans-serif-medium&quot;&#10;                        android:paddingBottom=&quot;4dp&quot;/&gt;&#10;&#10;                    &lt;Spinner&#10;                        android:id=&quot;@+id/spinnerProduct&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;48dp&quot;&#10;                        android:background=&quot;@drawable/spinner_whiteborder&quot;&#10;                        android:paddingLeft=&quot;12dp&quot;&#10;                        android:paddingRight=&quot;12dp&quot;&#10;                        android:layout_marginBottom=&quot;16dp&quot;&#10;                        android:visibility=&quot;visible&quot;/&gt;&#10;&#10;                    &lt;LinearLayout&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:orientation=&quot;horizontal&quot;&#10;                        android:gravity=&quot;center&quot;&#10;                        android:layout_marginTop=&quot;8dp&quot;&#10;                        android:layout_marginBottom=&quot;8dp&quot;&gt;&#10;&#10;                        &lt;com.google.android.material.card.MaterialCardView&#10;                            android:layout_width=&quot;0dp&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:layout_weight=&quot;1&quot;&#10;                            app:cardCornerRadius=&quot;16dp&quot;&#10;                            app:cardElevation=&quot;4dp&quot;&#10;                            app:strokeColor=&quot;@color/blue_primary&quot;&#10;                            app:strokeWidth=&quot;1dp&quot;&#10;                            app:cardBackgroundColor=&quot;@color/white&quot;&#10;                            android:layout_marginEnd=&quot;8dp&quot;&gt;&#10;                            &lt;LinearLayout&#10;                                android:id=&quot;@+id/cardStock&quot;&#10;                                android:layout_width=&quot;match_parent&quot;&#10;                                android:layout_height=&quot;wrap_content&quot;&#10;                                android:orientation=&quot;vertical&quot;&#10;                                android:background=&quot;@color/white&quot;&#10;                                android:padding=&quot;10dp&quot;&#10;                                android:visibility=&quot;gone&quot;&#10;                                android:elevation=&quot;2dp&quot;&gt;&#10;                                &lt;TextView&#10;                                    android:id=&quot;@+id/textStockTotal&quot;&#10;                                    android:layout_width=&quot;match_parent&quot;&#10;                                    android:layout_height=&quot;wrap_content&quot;&#10;                                    android:text=&quot;Total Stock: -&quot;&#10;                                    android:textColor=&quot;@color/blue_dark&quot;&#10;                                    android:textSize=&quot;16sp&quot;&#10;                                    android:textStyle=&quot;bold&quot;&#10;                                    android:fontFamily=&quot;sans-serif-medium&quot;&#10;                                    android:gravity=&quot;center&quot;&#10;                                    android:padding=&quot;8dp&quot;&#10;                                    android:maxLines=&quot;2&quot;&#10;                                    android:ellipsize=&quot;end&quot;/&gt;&#10;                            &lt;/LinearLayout&gt;&#10;                        &lt;/com.google.android.material.card.MaterialCardView&gt;&#10;&#10;                        &lt;com.google.android.material.card.MaterialCardView&#10;                            android:layout_width=&quot;0dp&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:layout_weight=&quot;1&quot;&#10;                            app:cardCornerRadius=&quot;16dp&quot;&#10;                            app:cardElevation=&quot;4dp&quot;&#10;                            app:strokeColor=&quot;@color/blue_primary&quot;&#10;                            app:strokeWidth=&quot;1dp&quot;&#10;                            app:cardBackgroundColor=&quot;@color/white&quot;&#10;                            android:layout_marginStart=&quot;8dp&quot;&gt;&#10;                            &lt;LinearLayout&#10;                                android:id=&quot;@+id/cardDispatch&quot;&#10;                                android:layout_width=&quot;match_parent&quot;&#10;                                android:layout_height=&quot;wrap_content&quot;&#10;                                android:orientation=&quot;vertical&quot;&#10;                                android:background=&quot;@color/white&quot;&#10;                                android:padding=&quot;10dp&quot;&#10;                                android:visibility=&quot;gone&quot;&#10;                                android:elevation=&quot;2dp&quot;&gt;&#10;                                &lt;TextView&#10;                                    android:id=&quot;@+id/textDispatchTotal&quot;&#10;                                    android:layout_width=&quot;match_parent&quot;&#10;                                    android:layout_height=&quot;wrap_content&quot;&#10;                                    android:text=&quot;Total Dispatched: -&quot;&#10;                                    android:textColor=&quot;@color/blue_dark&quot;&#10;                                    android:textSize=&quot;16sp&quot;&#10;                                    android:textStyle=&quot;bold&quot;&#10;                                    android:fontFamily=&quot;sans-serif-medium&quot;&#10;                                    android:gravity=&quot;center&quot;&#10;                                    android:padding=&quot;8dp&quot;&#10;                                    android:ellipsize=&quot;end&quot;/&gt;&#10;                                    android:maxLines=&quot;2&quot;&#10;                            &lt;/LinearLayout&gt;&#10;                        &lt;/com.google.android.material.card.MaterialCardView&gt;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                    &lt;LinearLayout&#10;                        android:id=&quot;@+id/layoutDispatchSection&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:orientation=&quot;vertical&quot;&#10;                        android:visibility=&quot;gone&quot;&gt;&#10;                        &lt;!-- Dispatch Section UI here --&gt;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;match_parent&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;Add Dispatch&quot;&#10;                            android:textColor=&quot;@color/blue_primary&quot;&#10;                            android:textSize=&quot;18sp&quot;&#10;                            android:textStyle=&quot;bold&quot;&#10;                            android:fontFamily=&quot;sans-serif-medium&quot;&#10;                            android:paddingTop=&quot;12dp&quot;&#10;                            android:paddingBottom=&quot;4dp&quot;/&gt;&#10;                        &lt;com.google.android.material.textfield.TextInputLayout&#10;                            android:layout_width=&quot;match_parent&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:hint=&quot;Enter dispatch quantity&quot;&#10;                            app:boxBackgroundMode=&quot;outline&quot;&#10;                            app:boxStrokeColor=&quot;@color/blue_primary&quot;&#10;                            app:boxCornerRadiusTopStart=&quot;12dp&quot;&#10;                            app:boxCornerRadiusTopEnd=&quot;12dp&quot;&#10;                            app:boxCornerRadiusBottomStart=&quot;12dp&quot;&#10;                            app:boxCornerRadiusBottomEnd=&quot;12dp&quot;&#10;                            app:boxBackgroundColor=&quot;@color/white&quot;&#10;                            android:layout_marginBottom=&quot;8dp&quot;&gt;&#10;                            &lt;com.google.android.material.textfield.TextInputEditText&#10;                                android:id=&quot;@+id/editTextDispatchQuantity&quot;&#10;                                android:layout_width=&quot;match_parent&quot;&#10;                                android:layout_height=&quot;wrap_content&quot;&#10;                                android:inputType=&quot;number&quot;&#10;                                android:textColorHint=&quot;@color/blue_grey&quot;&#10;                                android:textColor=&quot;@color/blue_dark&quot;&#10;                                android:textSize=&quot;16sp&quot;&#10;                                android:fontFamily=&quot;sans-serif&quot;/&gt;&#10;                        &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;                        &lt;com.google.android.material.button.MaterialButton&#10;                            android:id=&quot;@+id/buttonSelectDate&quot;&#10;                            android:layout_width=&quot;match_parent&quot;&#10;                            android:layout_height=&quot;48dp&quot;&#10;                            android:text=&quot;Choose Date&quot;&#10;                            app:cornerRadius=&quot;12dp&quot;&#10;                            app:backgroundTint=&quot;@color/blue_button&quot;&#10;                            android:textColor=&quot;@color/white&quot;&#10;                            android:textSize=&quot;16sp&quot;&#10;                            app:elevation=&quot;2dp&quot;&#10;                            app:icon=&quot;@android:drawable/ic_menu_my_calendar&quot;&#10;                            app:iconGravity=&quot;textStart&quot;&#10;                            app:iconPadding=&quot;8dp&quot;&#10;                            android:layout_marginBottom=&quot;2dp&quot;/&gt;&#10;                        &lt;TextView&#10;                            android:id=&quot;@+id/textSelectedDate&quot;&#10;                            android:layout_width=&quot;match_parent&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;No date selected&quot;&#10;                            android:textColor=&quot;@color/blue_primary&quot;&#10;                            android:textSize=&quot;16sp&quot;&#10;                            android:paddingLeft=&quot;2dp&quot;&#10;                            android:paddingTop=&quot;2dp&quot;&#10;                            android:paddingBottom=&quot;12dp&quot;&#10;                            android:fontFamily=&quot;sans-serif&quot;/&gt;&#10;                        &lt;com.google.android.material.button.MaterialButton&#10;                            android:id=&quot;@+id/buttonSubmitDispatch&quot;&#10;                            android:layout_width=&quot;match_parent&quot;&#10;                            android:layout_height=&quot;48dp&quot;&#10;                            android:text=&quot;Submit Dispatch&quot;&#10;                            app:cornerRadius=&quot;12dp&quot;&#10;                            app:backgroundTint=&quot;@color/blue_primary&quot;&#10;                            android:textColor=&quot;@color/white&quot;&#10;                            android:textSize=&quot;16sp&quot;&#10;                            app:elevation=&quot;2dp&quot;&#10;                            android:layout_marginBottom=&quot;16dp&quot;/&gt;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                    &lt;LinearLayout&#10;                        android:id=&quot;@+id/layoutStockSection&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:orientation=&quot;vertical&quot;&#10;                        android:visibility=&quot;gone&quot;&gt;&#10;                        &lt;!-- Stock Section UI here --&gt;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;match_parent&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;Update Stock&quot;&#10;                            android:textColor=&quot;@color/blue_primary&quot;&#10;                            android:textSize=&quot;18sp&quot;&#10;                            android:textStyle=&quot;bold&quot;&#10;                            android:fontFamily=&quot;sans-serif-medium&quot;&#10;                            android:paddingTop=&quot;12dp&quot;&#10;                            android:paddingBottom=&quot;4dp&quot;/&gt;&#10;                        &lt;com.google.android.material.textfield.TextInputLayout&#10;                            android:layout_width=&quot;match_parent&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:hint=&quot;Enter stock quantity&quot;&#10;                            app:boxBackgroundMode=&quot;outline&quot;&#10;                            app:boxStrokeColor=&quot;@color/blue_primary&quot;&#10;                            app:boxCornerRadiusTopStart=&quot;12dp&quot;&#10;                            app:boxCornerRadiusTopEnd=&quot;12dp&quot;&#10;                            app:boxCornerRadiusBottomStart=&quot;12dp&quot;&#10;                            app:boxCornerRadiusBottomEnd=&quot;12dp&quot;&#10;                            app:boxBackgroundColor=&quot;@color/white&quot;&#10;                            android:layout_marginBottom=&quot;8dp&quot;&gt;&#10;                            &lt;com.google.android.material.textfield.TextInputEditText&#10;                                android:id=&quot;@+id/editTextStockQuantity&quot;&#10;                                android:layout_width=&quot;match_parent&quot;&#10;                                android:layout_height=&quot;wrap_content&quot;&#10;                                android:inputType=&quot;number&quot;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:background=&quot;@color/white&quot;&gt;&#10;&#10;    &lt;androidx.appcompat.widget.Toolbar&#10;        android:id=&quot;@+id/toolbarStock&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:background=&quot;@color/blue_primary&quot;&#10;        app:title=&quot;Aquatrack&quot;&#10;        app:titleTextColor=&quot;@color/white&quot;&#10;        app:popupTheme=&quot;@style/ThemeOverlay.AppCompat.Light&quot; /&gt;&#10;&#10;    &lt;ScrollView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&gt;&#10;        &lt;LinearLayout&#10;            android:orientation=&quot;vertical&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:padding=&quot;20dp&quot;&gt;&#10;&#10;            &lt;com.google.android.material.card.MaterialCardView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                app:cardCornerRadius=&quot;16dp&quot;&#10;                app:cardElevation=&quot;4dp&quot;&#10;                app:strokeColor=&quot;@color/blue_primary&quot;&#10;                app:strokeWidth=&quot;1dp&quot;&#10;                app:cardBackgroundColor=&quot;@color/white&quot;&#10;                android:layout_marginBottom=&quot;24dp&quot;&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:padding=&quot;18dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Select Product&quot;&#10;                        android:textColor=&quot;@color/blue_primary&quot;&#10;                        android:textSize=&quot;18sp&quot;&#10;                        android:textStyle=&quot;bold&quot;&#10;                        android:fontFamily=&quot;sans-serif-medium&quot;&#10;                        android:paddingBottom=&quot;4dp&quot;/&gt;&#10;&#10;                    &lt;Spinner&#10;                        android:id=&quot;@+id/spinnerProduct&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;48dp&quot;&#10;                        android:background=&quot;@drawable/spinner_whiteborder&quot;&#10;                        android:paddingLeft=&quot;12dp&quot;&#10;                        android:paddingRight=&quot;12dp&quot;&#10;                        android:layout_marginBottom=&quot;16dp&quot;&#10;                        android:visibility=&quot;visible&quot;/&gt;&#10;&#10;                    &lt;LinearLayout&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:orientation=&quot;horizontal&quot;&#10;                        android:gravity=&quot;center&quot;&#10;                        android:layout_marginTop=&quot;8dp&quot;&#10;                        android:layout_marginBottom=&quot;8dp&quot;&gt;&#10;&#10;                        &lt;com.google.android.material.card.MaterialCardView&#10;                            android:layout_width=&quot;0dp&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:layout_weight=&quot;1&quot;&#10;                            app:cardCornerRadius=&quot;16dp&quot;&#10;                            app:cardElevation=&quot;4dp&quot;&#10;                            app:strokeColor=&quot;@color/blue_primary&quot;&#10;                            app:strokeWidth=&quot;1dp&quot;&#10;                            app:cardBackgroundColor=&quot;@color/white&quot;&#10;                            android:layout_marginEnd=&quot;8dp&quot;&gt;&#10;                            &lt;LinearLayout&#10;                                android:id=&quot;@+id/cardStock&quot;&#10;                                android:layout_width=&quot;match_parent&quot;&#10;                                android:layout_height=&quot;wrap_content&quot;&#10;                                android:orientation=&quot;vertical&quot;&#10;                                android:background=&quot;@color/white&quot;&#10;                                android:padding=&quot;10dp&quot;&#10;                                android:visibility=&quot;gone&quot;&#10;                                android:elevation=&quot;2dp&quot;&gt;&#10;                                &lt;TextView&#10;                                    android:id=&quot;@+id/textStockTotal&quot;&#10;                                    android:layout_width=&quot;match_parent&quot;&#10;                                    android:layout_height=&quot;wrap_content&quot;&#10;                                    android:text=&quot;Total Stock: -&quot;&#10;                                    android:textColor=&quot;@color/blue_dark&quot;&#10;                                    android:textSize=&quot;16sp&quot;&#10;                                    android:textStyle=&quot;bold&quot;&#10;                                    android:fontFamily=&quot;sans-serif-medium&quot;&#10;                                    android:gravity=&quot;center&quot;&#10;                                    android:padding=&quot;8dp&quot;&#10;                                    android:maxLines=&quot;2&quot;&#10;                                    android:ellipsize=&quot;end&quot;/&gt;&#10;                            &lt;/LinearLayout&gt;&#10;                        &lt;/com.google.android.material.card.MaterialCardView&gt;&#10;&#10;                        &lt;com.google.android.material.card.MaterialCardView&#10;                            android:layout_width=&quot;0dp&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:layout_weight=&quot;1&quot;&#10;                            app:cardCornerRadius=&quot;16dp&quot;&#10;                            app:cardElevation=&quot;4dp&quot;&#10;                            app:strokeColor=&quot;@color/blue_primary&quot;&#10;                            app:strokeWidth=&quot;1dp&quot;&#10;                            app:cardBackgroundColor=&quot;@color/white&quot;&#10;                            android:layout_marginStart=&quot;8dp&quot;&gt;&#10;                            &lt;LinearLayout&#10;                                android:id=&quot;@+id/cardDispatch&quot;&#10;                                android:layout_width=&quot;match_parent&quot;&#10;                                android:layout_height=&quot;wrap_content&quot;&#10;                                android:orientation=&quot;vertical&quot;&#10;                                android:background=&quot;@color/white&quot;&#10;                                android:padding=&quot;10dp&quot;&#10;                                android:visibility=&quot;gone&quot;&#10;                                android:elevation=&quot;2dp&quot;&gt;&#10;                                &lt;TextView&#10;                                    android:id=&quot;@+id/textDispatchTotal&quot;&#10;                                    android:layout_width=&quot;match_parent&quot;&#10;                                    android:layout_height=&quot;wrap_content&quot;&#10;                                    android:text=&quot;Total Dispatched: -&quot;&#10;                                    android:textColor=&quot;@color/blue_dark&quot;&#10;                                    android:textSize=&quot;16sp&quot;&#10;                                    android:textStyle=&quot;bold&quot;&#10;                                    android:fontFamily=&quot;sans-serif-medium&quot;&#10;                                    android:gravity=&quot;center&quot;&#10;                                    android:padding=&quot;8dp&quot;&#10;                                    android:ellipsize=&quot;end&quot;/&gt;&#10;                                    android:maxLines=&quot;2&quot;&#10;                            &lt;/LinearLayout&gt;&#10;                        &lt;/com.google.android.material.card.MaterialCardView&gt;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                    &lt;LinearLayout&#10;                        android:id=&quot;@+id/layoutDispatchSection&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:orientation=&quot;vertical&quot;&#10;                        android:visibility=&quot;gone&quot;&gt;&#10;                        &lt;!-- Dispatch Section UI here --&gt;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;match_parent&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;Add Dispatch&quot;&#10;                            android:textColor=&quot;@color/blue_primary&quot;&#10;                            android:textSize=&quot;18sp&quot;&#10;                            android:textStyle=&quot;bold&quot;&#10;                            android:fontFamily=&quot;sans-serif-medium&quot;&#10;                            android:paddingTop=&quot;12dp&quot;&#10;                            android:paddingBottom=&quot;4dp&quot;/&gt;&#10;                        &lt;com.google.android.material.textfield.TextInputLayout&#10;                            android:layout_width=&quot;match_parent&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:hint=&quot;Enter dispatch quantity&quot;&#10;                            app:boxBackgroundMode=&quot;outline&quot;&#10;                            app:boxStrokeColor=&quot;@color/blue_primary&quot;&#10;                            app:boxCornerRadiusTopStart=&quot;12dp&quot;&#10;                            app:boxCornerRadiusTopEnd=&quot;12dp&quot;&#10;                            app:boxCornerRadiusBottomStart=&quot;12dp&quot;&#10;                            app:boxCornerRadiusBottomEnd=&quot;12dp&quot;&#10;                            app:boxBackgroundColor=&quot;@color/white&quot;&#10;                            android:layout_marginBottom=&quot;8dp&quot;&gt;&#10;                            &lt;com.google.android.material.textfield.TextInputEditText&#10;                                android:id=&quot;@+id/editTextDispatchQuantity&quot;&#10;                                android:layout_width=&quot;match_parent&quot;&#10;                                android:layout_height=&quot;wrap_content&quot;&#10;                                android:inputType=&quot;number&quot;&#10;                                android:textColorHint=&quot;@color/blue_grey&quot;&#10;                                android:textColor=&quot;@color/blue_dark&quot;&#10;                                android:textSize=&quot;16sp&quot;&#10;                                android:fontFamily=&quot;sans-serif&quot;/&gt;&#10;                        &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;                        &lt;com.google.android.material.button.MaterialButton&#10;                            android:id=&quot;@+id/buttonSelectDate&quot;&#10;                            android:layout_width=&quot;match_parent&quot;&#10;                            android:layout_height=&quot;48dp&quot;&#10;                            android:text=&quot;Choose Date&quot;&#10;                            app:cornerRadius=&quot;12dp&quot;&#10;                            app:backgroundTint=&quot;@color/blue_button&quot;&#10;                            android:textColor=&quot;@color/white&quot;&#10;                            android:textSize=&quot;16sp&quot;&#10;                            app:elevation=&quot;2dp&quot;&#10;                            app:icon=&quot;@android:drawable/ic_menu_my_calendar&quot;&#10;                            app:iconGravity=&quot;textStart&quot;&#10;                            app:iconPadding=&quot;8dp&quot;&#10;                            android:layout_marginBottom=&quot;2dp&quot;/&gt;&#10;                        &lt;TextView&#10;                            android:id=&quot;@+id/textSelectedDate&quot;&#10;                            android:layout_width=&quot;match_parent&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;No date selected&quot;&#10;                            android:textColor=&quot;@color/blue_primary&quot;&#10;                            android:textSize=&quot;16sp&quot;&#10;                            android:paddingLeft=&quot;2dp&quot;&#10;                            android:paddingTop=&quot;2dp&quot;&#10;                            android:paddingBottom=&quot;12dp&quot;&#10;                            android:fontFamily=&quot;sans-serif&quot;/&gt;&#10;                        &lt;com.google.android.material.button.MaterialButton&#10;                            android:id=&quot;@+id/buttonSubmitDispatch&quot;&#10;                            android:layout_width=&quot;match_parent&quot;&#10;                            android:layout_height=&quot;48dp&quot;&#10;                            android:text=&quot;Submit Dispatch&quot;&#10;                            app:cornerRadius=&quot;12dp&quot;&#10;                            app:backgroundTint=&quot;@color/blue_primary&quot;&#10;                            android:textColor=&quot;@color/white&quot;&#10;                            android:textSize=&quot;16sp&quot;&#10;                            app:elevation=&quot;2dp&quot;&#10;                            android:layout_marginBottom=&quot;16dp&quot;/&gt;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                    &lt;LinearLayout&#10;                        android:id=&quot;@+id/layoutStockSection&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:orientation=&quot;vertical&quot;&#10;                        android:visibility=&quot;gone&quot;&gt;&#10;                        &lt;!-- Stock Section UI here --&gt;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;match_parent&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;Update Stock&quot;&#10;                            android:textColor=&quot;@color/blue_primary&quot;&#10;                            android:textSize=&quot;18sp&quot;&#10;                            android:textStyle=&quot;bold&quot;&#10;                            android:fontFamily=&quot;sans-serif-medium&quot;&#10;                            android:paddingTop=&quot;12dp&quot;&#10;                            android:paddingBottom=&quot;4dp&quot;/&gt;&#10;                        &lt;com.google.android.material.textfield.TextInputLayout&#10;                            android:layout_width=&quot;match_parent&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:hint=&quot;Enter stock quantity&quot;&#10;                            app:boxBackgroundMode=&quot;outline&quot;&#10;                            app:boxStrokeColor=&quot;@color/blue_primary&quot;&#10;                            app:boxCornerRadiusTopStart=&quot;12dp&quot;&#10;                            app:boxCornerRadiusTopEnd=&quot;12dp&quot;&#10;                            app:boxCornerRadiusBottomStart=&quot;12dp&quot;&#10;                            app:boxCornerRadiusBottomEnd=&quot;12dp&quot;&#10;                            app:boxBackgroundColor=&quot;@color/white&quot;&#10;                            android:layout_marginBottom=&quot;8dp&quot;&gt;&#10;                            &lt;com.google.android.material.textfield.TextInputEditText&#10;                                android:id=&quot;@+id/editTextStockQuantity&quot;&#10;                                android:layout_width=&quot;match_parent&quot;&#10;                                android:layout_height=&quot;wrap_content&quot;&#10;                                android:inputType=&quot;number&quot;&#10;                                android:textColorHint=&quot;@color/blue_grey&quot;&#10;                                android:textColor=&quot;@color/blue_dark&quot;&#10;                                android:textSize=&quot;16sp&quot;&#10;                                android:fontFamily=&quot;sans-serif&quot;/&gt;&#10;                        &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;                        &lt;com.google.android.material.button.MaterialButton&#10;                            android:id=&quot;@+id/buttonSelectStockDate&quot;&#10;                            android:layout_width=&quot;match_parent&quot;&#10;                            android:layout_height=&quot;48dp&quot;&#10;                            android:text=&quot;Choose Stock Date&quot;&#10;                            app:cornerRadius=&quot;12dp&quot;&#10;                            app:backgroundTint=&quot;@color/blue_button&quot;&#10;                            android:textColor=&quot;@color/white&quot;&#10;                            android:textSize=&quot;16sp&quot;&#10;                            app:elevation=&quot;2dp&quot;&#10;                            app:icon=&quot;@android:drawable/ic_menu_my_calendar&quot;&#10;                            app:iconGravity=&quot;textStart&quot;&#10;                            app:iconPadding=&quot;8dp&quot;&#10;                            android:layout_marginBottom=&quot;2dp&quot;/&gt;&#10;                        &lt;TextView&#10;                            android:id=&quot;@+id/textSelectedStockDate&quot;&#10;                            android:layout_width=&quot;match_parent&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;No stock date selected&quot;&#10;                            android:textColor=&quot;@color/blue_primary&quot;&#10;                            android:textSize=&quot;16sp&quot;&#10;                            android:paddingLeft=&quot;2dp&quot;&#10;                            android:paddingTop=&quot;2dp&quot;&#10;                            android:paddingBottom=&quot;12dp&quot;&#10;                            android:fontFamily=&quot;sans-serif&quot;/&gt;&#10;                        &lt;com.google.android.material.button.MaterialButton&#10;                            android:id=&quot;@+id/buttonSubmitStock&quot;&#10;                            android:layout_width=&quot;match_parent&quot;&#10;                            android:layout_height=&quot;48dp&quot;&#10;                            android:text=&quot;Submit Stock&quot;&#10;                            app:cornerRadius=&quot;12dp&quot;&#10;                            app:backgroundTint=&quot;@color/blue_primary&quot;&#10;                            android:textColor=&quot;@color/white&quot;&#10;                            android:textSize=&quot;16sp&quot;&#10;                            app:elevation=&quot;2dp&quot;&#10;                            android:layout_marginBottom=&quot;8dp&quot;/&gt;&#10;                    &lt;/LinearLayout&gt;&#10;                &lt;/LinearLayout&gt;&#10;            &lt;/com.google.android.material.card.MaterialCardView&gt;&#10;        &lt;/LinearLayout&gt;&#10;    &lt;/ScrollView&gt;&#10;&lt;/LinearLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/menu/menu_stock.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/menu/menu_stock.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;menu xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;&#10;    &lt;item&#10;        android:id=&quot;@+id/action_refresh&quot;&#10;        android:icon=&quot;@drawable/ic_refresh_blue&quot;&#10;        android:title=&quot;Refresh&quot;&#10;        android:orderInCategory=&quot;100&quot;&#10;        android:showAsAction=&quot;always&quot; /&gt;&#10;&lt;/menu&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/values-night/themes.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/values-night/themes.xml" />
              <option name="originalContent" value="&lt;resources xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt;&#10;    &lt;!-- Base application theme. --&gt;&#10;    &lt;style name=&quot;Theme.Aquatrack&quot; parent=&quot;Theme.MaterialComponents.DayNight.DarkActionBar&quot;&gt;&#10;        &lt;!-- Primary brand color. --&gt;&#10;        &lt;item name=&quot;colorPrimary&quot;&gt;@color/purple_200&lt;/item&gt;&#10;        &lt;item name=&quot;colorPrimaryVariant&quot;&gt;@color/purple_700&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/black&lt;/item&gt;&#10;        &lt;!-- Secondary brand color. --&gt;&#10;        &lt;item name=&quot;colorSecondary&quot;&gt;@color/teal_200&lt;/item&gt;&#10;        &lt;item name=&quot;colorSecondaryVariant&quot;&gt;@color/teal_200&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnSecondary&quot;&gt;@color/black&lt;/item&gt;&#10;        &lt;!-- Status bar color. --&gt;&#10;        &lt;item name=&quot;android:statusBarColor&quot;&gt;?attr/colorPrimaryVariant&lt;/item&gt;&#10;        &lt;!-- Customize your theme here. --&gt;&#10;    &lt;/style&gt;&#10;&lt;/resources&gt;" />
              <option name="updatedContent" value="&lt;resources xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt;&#10;    &lt;!-- Base application theme. --&gt;&#10;    &lt;style name=&quot;Theme.Aquatrack&quot; parent=&quot;Theme.MaterialComponents.DayNight.DarkActionBar&quot;&gt;&#10;        &lt;!-- Primary brand color. --&gt;&#10;        &lt;item name=&quot;colorPrimary&quot;&gt;@color/blue_primary&lt;/item&gt;&#10;        &lt;item name=&quot;colorPrimaryVariant&quot;&gt;@color/blue_dark&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/on_primary&lt;/item&gt;&#10;        &lt;!-- Secondary brand color. --&gt;&#10;        &lt;item name=&quot;colorSecondary&quot;&gt;@color/blue_accent&lt;/item&gt;&#10;        &lt;item name=&quot;colorSecondaryVariant&quot;&gt;@color/blue_button&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnSecondary&quot;&gt;@color/on_primary&lt;/item&gt;&#10;        &lt;!-- Status bar color. --&gt;&#10;        &lt;item name=&quot;android:statusBarColor&quot;&gt;@color/blue_dark&lt;/item&gt;&#10;        &lt;!-- Customize your theme here. --&gt;&#10;    &lt;/style&gt;&#10;&lt;/resources&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/values/colors.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/values/colors.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;resources&gt;&#10;&#10;    &lt;color name=&quot;white&quot;&gt;#FFFFFF&lt;/color&gt;&#10;    &lt;color name=&quot;blue_primary&quot;&gt;#2563EB&lt;/color&gt;&#10;    &lt;color name=&quot;blue_button&quot;&gt;#2563EB&lt;/color&gt;&#10;    &lt;color name=&quot;blue_grey&quot;&gt;#DBEAFE&lt;/color&gt;&#10;    &lt;color name=&quot;blue_dark&quot;&gt;#2563EB&lt;/color&gt;&#10;    &lt;color name=&quot;on_primary&quot;&gt;#FFFFFF&lt;/color&gt;&#10;    &lt;color name=&quot;blue_accent&quot;&gt;#2563EB&lt;/color&gt;&#10;    &lt;color name=&quot;background&quot;&gt;#E5E7EB&lt;/color&gt;&#10;    &lt;color name=&quot;surface&quot;&gt;#DBEAFE&lt;/color&gt;&#10;    &lt;color name=&quot;on_background&quot;&gt;#222B45&lt;/color&gt;&#10;&lt;/resources&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;resources&gt;&#10;&#10;    &lt;color name=&quot;white&quot;&gt;#FFFFFF&lt;/color&gt;&#10;    &lt;color name=&quot;blue_primary&quot;&gt;#2563EB&lt;/color&gt;&#10;    &lt;color name=&quot;blue_button&quot;&gt;#2563EB&lt;/color&gt;&#10;    &lt;color name=&quot;blue_grey&quot;&gt;#DBEAFE&lt;/color&gt;&#10;    &lt;color name=&quot;blue_dark&quot;&gt;#2563EB&lt;/color&gt;&#10;    &lt;color name=&quot;on_primary&quot;&gt;#FFFFFF&lt;/color&gt;&#10;    &lt;color name=&quot;blue_accent&quot;&gt;#2563EB&lt;/color&gt;&#10;    &lt;color name=&quot;background&quot;&gt;#E5E7EB&lt;/color&gt;&#10;    &lt;color name=&quot;surface&quot;&gt;#DBEAFE&lt;/color&gt;&#10;    &lt;color name=&quot;on_background&quot;&gt;#222B45&lt;/color&gt;&#10;    &lt;color name=&quot;card&quot;&gt;#DBEAFE&lt;/color&gt;&#10;&#10;&lt;/resources&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/values/styles.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/values/styles.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;resources&gt;&#10;    &lt;style name=&quot;Theme.Aquatrack&quot; parent=&quot;Theme.AppCompat.Light.NoActionBar&quot;&gt;&#10;        &lt;!-- Customize your theme here. --&gt;&#10;        &lt;item name=&quot;colorPrimary&quot;&gt;@color/blue_primary&lt;/item&gt;&#10;        &lt;item name=&quot;colorPrimaryDark&quot;&gt;@color/blue_dark&lt;/item&gt;&#10;        &lt;item name=&quot;colorAccent&quot;&gt;@color/blue_button&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&lt;/resources&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;resources&gt;&#10;    &lt;!-- No theme definitions here. Use themes.xml for Theme.Aquatrack. --&gt;&#10;&lt;/resources&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/values/themes.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/values/themes.xml" />
              <option name="originalContent" value="&lt;resources xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt;&#10;    &lt;!-- Base application theme. --&gt;&#10;    &lt;style name=&quot;Theme.Aquatrack&quot; parent=&quot;Theme.MaterialComponents.DayNight.DarkActionBar&quot;&gt;&#10;        &lt;!-- Primary brand color. --&gt;&#10;        &lt;item name=&quot;colorPrimary&quot;&gt;@color/blue_primary&lt;/item&gt;&#10;        &lt;item name=&quot;colorPrimaryVariant&quot;&gt;@color/blue_dark&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/on_primary&lt;/item&gt;&#10;        &lt;!-- Secondary brand color. --&gt;&#10;        &lt;item name=&quot;colorSecondary&quot;&gt;@color/blue_accent&lt;/item&gt;&#10;        &lt;item name=&quot;colorSecondaryVariant&quot;&gt;@color/blue_button&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnSecondary&quot;&gt;@color/on_primary&lt;/item&gt;&#10;        &lt;!-- Status bar color. --&gt;&#10;        &lt;item name=&quot;android:statusBarColor&quot;&gt;@color/blue_dark&lt;/item&gt;&#10;        &lt;item name=&quot;android:windowBackground&quot;&gt;@color/background&lt;/item&gt;&#10;        &lt;item name=&quot;colorSurface&quot;&gt;@color/surface&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnSurface&quot;&gt;@color/on_background&lt;/item&gt;&#10;        &lt;!-- Customize your theme here. --&gt;&#10;    &lt;/style&gt;&#10;&lt;/resources&gt;&#10;" />
              <option name="updatedContent" value="&lt;resources xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt;&#10;    &lt;!-- Base application theme. --&gt;&#10;    &lt;style name=&quot;Theme.Aquatrack&quot; parent=&quot;Theme.MaterialComponents.DayNight.NoActionBar&quot;&gt;&#10;        &lt;!-- Primary brand color. --&gt;&#10;        &lt;item name=&quot;colorPrimary&quot;&gt;@color/blue_primary&lt;/item&gt;&#10;        &lt;item name=&quot;colorPrimaryVariant&quot;&gt;@color/blue_dark&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/on_primary&lt;/item&gt;&#10;        &lt;!-- Secondary brand color. --&gt;&#10;        &lt;item name=&quot;colorSecondary&quot;&gt;@color/blue_accent&lt;/item&gt;&#10;        &lt;item name=&quot;colorSecondaryVariant&quot;&gt;@color/blue_button&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnSecondary&quot;&gt;@color/on_primary&lt;/item&gt;&#10;        &lt;!-- Status bar color. --&gt;&#10;        &lt;item name=&quot;android:statusBarColor&quot;&gt;@color/blue_dark&lt;/item&gt;&#10;        &lt;item name=&quot;android:windowBackground&quot;&gt;@color/background&lt;/item&gt;&#10;        &lt;item name=&quot;colorSurface&quot;&gt;@color/surface&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnSurface&quot;&gt;@color/on_background&lt;/item&gt;&#10;        &lt;!-- Customize your theme here. --&gt;&#10;    &lt;/style&gt;&#10;&lt;/resources&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>